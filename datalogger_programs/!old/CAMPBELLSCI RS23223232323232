SDI 12 is a lot easier code wise than using RS-232

put it in a slow scan, these YSI EXO sensors take a long time to get the value output (~1-5 min scan)



'CR1000 Series Datalogger

'Example program to read data from an EXO sonde over RS232

'date: August 16, 2016

'program author: Jacob Davis, Campbell Scientific

 

'Declare Public Variables

Const EXO_Port = Com4

 

Public EXO_Data(14)

Public PTemp, batt_volt

Dim inputString As String * 256

Dim EXO_Delay As Long

Dim tempLong As Long

 

'Define Data Tables.

DataTable (Test,1,-1) 'Set table size to # of records, or -1 to autoallocate.

  DataInterval (0,15,Min,10)

  Minimum (1,batt_volt,FP2,False,False)

  Sample (1,PTemp,FP2)

EndTable

 

 

'Main Program

BeginProg

  SerialOpen (EXO_Port,9600,0,0,256)

  Scan (1,Sec,0,0)

    PanelTemp (PTemp,250)

    Battery (batt_volt)

 

 

 

    CallTable Test

  NextScan

  SlowSequence

  Scan (2,Min,3,0)

 

    SerialFlush (EXO_Port)

    SerialOut (EXO_Port,"twipeb" & CHR(13) & CHR(10),"",0,0)

    Delay (1,2,Sec)

    SerialIn (inputString,EXO_Port,100,13,256) 'Read in time until wiper cycle finishes

    SplitStr (EXO_Delay,inputString,"",1,0)

    If EXO_Delay > -1 AND EXO_Delay <> NAN Then

      'valid delay

      Timer (1,Sec,2)

      Do 'Wait for the wiper sequence to finish

        tempLong = Timer (1,Sec,4)

      Loop      Until tempLong >= (EXO_Delay + 1)

 

      SerialOut (EXO_Port,"data" & CHR(13) & CHR(10),"",0,0)

      SerialIn (inputString,EXO_Port,500,13,256)

      SplitStr (EXO_Data(),inputString,"",14,0)

    Else

      Move (EXO_Data(),14,NAN,1) 'Load with NAN if failed

    EndIf ' EXO_Delay > -1 AND EXO_Delay <> NAN

 

 

  NextScan

EndProg